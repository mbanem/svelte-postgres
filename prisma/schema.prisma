// This is
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String 	 @id @default(uuid())
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)

  author    User     @relation(fields: [authorId], references: [id])
  authorId  String

  createdAt DateTime @default(now())   @map("created_at")
  updatedAt DateTime @updatedAt        @map("updated_at")

  @@map("post")
}

model Profile {
  id     		String  @id @default(uuid())
  bio    		String?

  user   		User    @relation(fields: [userId], references: [id])
  userId 		String  @unique    @map("user_id")

  createdAt DateTime @default(now())   @map("created_at")
  updatedAt DateTime @updatedAt        @map("updated_at")

  @@map("profile")
}

model User {
  id      			String   @id @default(uuid())
  firstName    	String   @map("first_name")
  lastName    	String   @map("last_name")
  email   			String   @unique
  passwordHash 	String   @map("passwword_hash")
  userAuthToken	String   @map("user_auth_token")

  role   				Roles    @relation(fields: [roleId], references: [id])
  roleId 				Int      @map("role_id")
  posts   			Post[]
  profile 			Profile?

  todos         Todo[]    // arrays are optional as they can be empry

  createdAt DateTime @default(now())   @map("created_at")
  updatedAt DateTime @updatedAt        @map("updated_at")

  @@unique([firstName, lastName, email], name:"firstName_lastname_email")

  @@map("users")
}

model Roles {
  id   Int    @id @default(autoincrement())
  name String @unique

  User User[]

  @@map("roles")
}

model Todo {
  id        String @id @default(uuid())
  content   String
  priority  Int @default(0)
  completed Boolean @default(false)

  user   		User    @relation(fields: [userId], references: [id])
  userId 		String  @unique    @map("user_id")

  createdAt DateTime @default(now())   @map("created_at")
  updatedAt DateTime @updatedAt        @map("updated_at")

  @@map("todo")
}
